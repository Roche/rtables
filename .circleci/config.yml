version: 2.1
orbs:
  slack: circleci/slack@4.2.0

parameters:
  r-docker-image:
    type: string
    default: "rocker/tidyverse"
  r-docker-image-tag:
    type: string
    default: "3.6.3"

build_check_install_defaults: &build_check_install_defaults
  parameters:
    r-docker-image:
      type: string
      default: "rocker/tidyverse"
    r-docker-image-tag:
      type: string
      default: "3.6.3"
  docker:
    - image: "<< pipeline.parameters.r-docker-image >>:<< parameters.r-docker-image-tag >>"
  steps:
    - build_check_install_cmd


commands:
  build_check_install_cmd:
    steps:
      - checkout
      - run:
          name: "Build R package"
          command: |
            R CMD build .
            echo "export PKG=$(echo *.tar.gz)" >> $BASH_ENV
      - run:
          name: "Check R package"
          command: |
            R CMD check --no-manual ${PKG}
            result=$(tail -1 ${CIRCLE_PROJECT_REPONAME}.Rcheck/00check.log)
            [[ $result = Status:* ]] || echo "could not get Status line"; set -o errexit
            [[ $result = *"Error"* ]] && echo "checks result in errors"; set -o errexit
      - run:
          name: "Install R package"
          command: R CMD INSTALL ${PKG}
      - slack/notify:
          channel: nots
          event: fail
          template: basic_fail_1
      - run:
          name: "Prepare artifacts"
          command: mv ${CIRCLE_PROJECT_REPONAME}.Rcheck rpackage.Rcheck
      - store_artifacts:
          path: "rpackage.Rcheck/00check.log"
          destination: 00check.log
      - store_test_results:
          path: "rpackage.Rcheck/tests"
      - persist_to_workspace:
          root: ./
          paths:
            - "*.tar.gz"

jobs:

  version_validation:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - run:
          name: "Check version in NEWS.md and DESCRIPTION"
          command: |
            DESC_VERSION=$(awk -F: '/Version:/{gsub(/[ ]+/,"") ; print $2}' DESCRIPTION)
            NEWS_VERSION=$(awk '/^#/{print $3; exit}' NEWS.md)
            echo "NEWS.md version: $NEWS_VERSION"
            echo "DESCRIPTION version: $DESC_VERSION"
            if (test $DESC_VERSION = $NEWS_VERSION ); then
                echo "NEWS.md and DESCRIPTION have the same version"
            else
                echo "NEWS.md and DESCRIPTION have different versions"
                exit 1
            fi

  build_check_install_dev:
    <<: *build_check_install_defaults

  build_check_install_pre_release:
    <<: *build_check_install_defaults

  build_check_install_master:
    <<: *build_check_install_defaults

  roxygen:
    docker:
      - image: "<< pipeline.parameters.r-docker-image >>:<< pipeline.parameters.r-docker-image-tag >>"
    steps:
      - checkout
      - run:
          name: "check if manuals are upto date with roxygen comments"
          command: |
            R -e "roxygen2::roxygenize('.', roclets = c('rd', 'collate', 'namespace'))"
            if [[ -z $(git status -s) ]]
            then
              echo "manuals are not upto date with roxygen comments"
              echo "please rerun roxygen2::roxygenize('.', roclets = c('rd', 'collate', 'namespace'))"
              set -o errexit
            else
              echo "manuals are upto date with roxygen comments"
            fi

  pkgdown_build:
    docker:
      - image: "<< pipeline.parameters.r-docker-image >>:<< pipeline.parameters.r-docker-image-tag >>"
    steps:
      - checkout
      - run:
          name: "create pkgdown website"
          command: R -e 'pkgdown::build_site(".", devel = FALSE)'
      - store_artifacts:
          path: ./docs
          destination: pkgdown
      - persist_to_workspace:
          root: ./
          paths: docs

  pkgdown_deploy:
    docker:
      - image: node:14
    steps:
      - checkout
      - attach_workspace:
          at: docs
      - run:
          name: disable jekyll
          command: touch docs/docs/.nojekyll
      - run:
          name: install deps
          command: |
            npm install -g --silent gh-pages@3.0.0
            git config user.email "ci-build@roche.com"
            git config user.name "ci-build"
      - add_ssh_keys:
          fingerprints:
            - "e3:e8:03:cb:2a:09:8f:70:b9:3a:66:f0:e8:ee:4f:59"
      - run:
          name: deploys docs
          command: gh-pages --dotfiles --message "[skip ci] Updates" --dist docs/docs

workflows:
  version: 2
  Rworkflow:
    jobs:
      - version_validation
      - roxygen
      - pkgdown_build:
          requires:
            - roxygen
            - version_validation
      - build_check_install_dev:
          matrix:
            parameters:
              r-docker-image: ["rocker/tidyverse"]
              r-docker-image-tag: ["3.6.3", "3.6.2", "3.6.1"]
          requires:
            - roxygen
            - version_validation
          context: poc
          filters:
            branches:
              ignore:
                - pre-release
                - /^prf.*/
                - master
      - build_check_install_pre_release:
          matrix:
            parameters:
              r-docker-image: ["rocker/tidyverse"]
              r-docker-image-tag: ["3.6.3", "3.6.2", "3.6.1"]
          requires:
            - roxygen
            - version_validation
          context: poc
          filters:
            branches:
              only:
                - pre-release
                - /^prf.*/
      - build_check_install_master:
          matrix:
            parameters:
              r-docker-image: ["rocker/tidyverse"]
              r-docker-image-tag: ["3.6.3", "3.6.2", "3.6.1"]
          requires:
            - roxygen
            - version_validation
          context: poc
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master
      - approve_deploy_pkgdown:
          type: approval
          requires:
            - pkgdown_build
          filters:
            branches:
              only: master
      - pkgdown_deploy:
          requires:
            - approve_deploy_pkgdown
          filters:
            branches:
              only: master
