% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rtabulate.R
\name{rtabulate_old.factor}
\alias{rtabulate_old.factor}
\title{Tabulate Factors}
\usage{
\method{rtabulate_old}{factor}(
  x,
  col_by = by_all("All"),
  FUN = length,
  ...,
  useNA = c("ifany", "no", "always"),
  format = NULL,
  indent = 0,
  col_wise_args = NULL
)
}
\arguments{
\item{x}{a vector}

\item{col_by}{(\code{\link{factor}} or \code{\link{data.frame}}
if a \code{\link{factor}} of length \code{nrow(x)} that defines
which levels in \code{col_by} define a column.
can use \code{\link{by_factor_to_matrix}} to create a matrix from a factor to use non-disjoint columns
can use \code{\link{by_all}} to have a column with all rows, alternatively look at \code{\link{by_add_total}}}

\item{FUN}{a function that processes the cell data}

\item{...}{arguments passed to \code{FUN}}

\item{useNA}{either one of ("no", "ifany", "always"). If \code{"no"} then \code{NA} values
in \code{x} get dropped. When \code{"ifany"} is used a row for \code{NA} values is 
included in the summary if any \code{NA}s exist in \code{x}. For option \code{"always"} 
\code{NA} values are always included in the summary even if none exist in \code{x}.}

\item{format}{if \code{FUN} does not return a formatted \code{\link{rcell}}
then the \code{format} is applied}

\item{indent}{deprecated.}

\item{col_wise_args}{a named list containing collections (e.g. vectors or
lists) with data elements for each column of the resulting table. The data
elements are then passed to the named argument \code{FUN} corresponding to
the element name of the outer list. Hence, the length and order of each
collection must match the levels in \code{col_by}. See examples.}
}
\value{
an \code{\link{rtable}} object
}
\description{
By default each cell reports the number of observations in
each level of \code{x}.
}
\examples{

# TODO: remove rtabulate_old
# rtabulate_old(x = iris$Species)
# rtabulate_old(x = iris$Species, useNA = "always")
# rtabulate_old(x = factor(c("a", "a", NA, "b")), useNA = "ifany")
# 
# rtabulate_old(x = iris$Species, by_all("sum"))
# 
# sl5 <- factor(iris$Sepal.Length > 5, levels = c(TRUE, FALSE),
#    labels = c("S.L > 5", "S.L <= 5"))
# 
# rtabulate_old(iris$Species, col_by = sl5)
# rtabulate_old(sl5, iris$Species)
# 
# rtabulate_old(iris$Species, col_by = sl5,
#    FUN = function(cell_data, N) {
#      if (length(cell_data) > 10) {
#         length(cell_data) * c(1, 1/N)
#      } else {
#         rcell("-", format = "xx")
#      }
#    },
#    format = "xx (xx.xx\%)",
#    col_wise_args = list(N = table(sl5))
# )
# 
# rtabulate_old(x = factor(c("X", "Y"), c("X", "Y")),
#           col_by = factor(c("a", "a"), c("a", "b")), FUN = length)
# 
# rtabulate_old(factor(c("Y", "Y"), c("X", "Y")),
#           factor(c("b", "b"), c("a", "b")), length)
# 
# rtabulate_old(
#   x = factor(c("Y", "Y"), c("X", "Y")),
#   col_by = factor(c("b", "b"), c("a", "b")),
#   FUN = function(x, N) list(length(x), N),
#   col_wise_args = list(N = c(1,2))
# )

 
}
